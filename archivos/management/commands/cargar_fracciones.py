from django.core.management.base import BaseCommand
from archivos.models import Fraccion

class Command(BaseCommand):
    help = 'Carga las fracciones oficiales del Art√≠culo 65'

    def handle(self, *args, **options):
        # Mapeo de √°reas a tipos de usuario
        area_mapping = {
            'Unidad de Transparencia': 'transparencia',
            'Recursos Financieros': 'recursos_financieros',
            '√Årea': 'transparencia'  # Por defecto
        }
        
        # Fracciones oficiales extra√≠das del Excel
        fracciones_oficiales = [
            ("I", "Marco normativo al Sujeto Obligado", "Unidad de Transparencia"),
            ("II", "Estructura org√°nica", "Unidad de Transparencia"),
            ("III", "Las atribuciones, facultades, competencias y funciones de cada √°rea u √≥rgano administrativo", "Unidad de Transparencia"),
            ("IV", "Las metas y objetivos de las √°reas u √≥rganos administrativos de conformidad con sus programas operativos", "Unidad de Transparencia"),
            ("V", "Los indicadores relacionados con temas de inter√©s p√∫blico o trascendencia social", "Unidad de Transparencia"),
            ("VI", "El directorio de todas las personas servidoras p√∫blicas", "Unidad de Transparencia"),
            ("VII", "La remuneraci√≥n bruta y neta de todas las personas servidoras p√∫blicas de base y de confianza", "Unidad de Transparencia"),
            ("VIII", "Los gastos de representaci√≥n y vi√°ticos", "Recursos Financieros"),
            ("IX", "El n√∫mero total de las plazas y del personal de base y confianza", "Unidad de Transparencia"),
            ("X", "Las contrataciones de servicios profesionales por honorarios", "Unidad de Transparencia"),
            ("XI", "La versi√≥n p√∫blica de las declaraciones patrimoniales de las personas servidoras p√∫blicas", "Unidad de Transparencia"),
            ("XII", "El domicilio y otros datos de contacto de la Unidad de Transparencia", "Unidad de Transparencia"),
            ("XV", "Las condiciones generales de trabajo, contratos o convenios que regulen las relaciones laborales", "Unidad de Transparencia"),
            ("XVI", "La informaci√≥n curricular", "Unidad de Transparencia"),
            ("XVII", "El listado de personas servidoras p√∫blicas con sanciones administrativas firmes", "Unidad de Transparencia"),
            ("XVIII", "Los servicios y tr√°mites que ofrecen", "Unidad de Transparencia"),
            ("XIX", "La informaci√≥n financiera sobre el presupuesto asignado", "Unidad de Transparencia"),
            ("XXI", "Los montos destinados a gastos relativos a comunicaci√≥n social y publicidad oficial", "Recursos Financieros"),
            ("XXII", "Los informes de resultados de las auditor√≠as al ejercicio presupuestal de cada Sujeto Obligado", "Unidad de Transparencia"),
            ("XXV", "Las concesiones, contratos, convenios, permisos, licencias o autorizaciones otorgados", "Unidad de Transparencia"),
            ("XXVI", "Los resultados de los procedimientos de adjudicaci√≥n directa, invitaci√≥n restringida y licitaci√≥n", "Unidad de Transparencia"),
            ("XXVII", "Los informes que generen de conformidad con las disposiciones jur√≠dicas", "Unidad de Transparencia"),
            ("XXVIII", "Las estad√≠sticas que generen en cumplimiento de sus atribuciones, facultades, competencias y funciones", "Unidad de Transparencia"),
            ("XXIX", "Los informes de avances program√°ticos o presupuestales, balances generales y su estado financiero", "Unidad de Transparencia"),
            ("XXX", "El padr√≥n de proveedores y contratistas en los sistemas o medios habilitados para ello", "Unidad de Transparencia"),
            ("XXXI", "Los convenios de colaboraci√≥n, coordinaci√≥n y concertaci√≥n con los sectores p√∫blico, social y privado", "Unidad de Transparencia"),
            ("XXXII", "El inventario de bienes muebles e inmuebles en posesi√≥n y propiedad", "Unidad de Transparencia"),
            ("XXXIII", "Las recomendaciones emitidas por los √≥rganos p√∫blicos del Estado mexicano u organismos internacionales", "Unidad de Transparencia"),
            ("XXXIV", "Las resoluciones que se emitan en procesos o procedimientos seguidos en forma de juicio", "Unidad de Transparencia"),
            ("XXXV", "Los mecanismos de participaci√≥n ciudadana", "Unidad de Transparencia"),
            ("XXXVII", "Las actas y resoluciones del Comit√© de Transparencia", "Unidad de Transparencia"),
            ("XLII", "Las donaciones hechas a terceros en dinero o en especie", "Recursos Financieros"),
            ("XLIII", "El cat√°logo de disposici√≥n documental y la gu√≠a simple de archivo o documental", "Unidad de Transparencia"),
            ("XLVI", "Cualquier otra informaci√≥n que sea de utilidad o se considere relevante", "Unidad de Transparencia"),
        ]

        # Crear/actualizar fracciones
        created_count = 0
        updated_count = 0
        
        for numero, nombre, area in fracciones_oficiales:
            tipo_usuario = area_mapping.get(area, 'transparencia')
            
            fraccion, created = Fraccion.objects.get_or_create(
                numero=numero,
                defaults={
                    'nombre': nombre,
                    'descripcion': f"Fracci√≥n {numero} del Art√≠culo 65 - {nombre}",
                    'tipo_usuario_asignado': tipo_usuario,
                    'activa': True
                }
            )
            
            if created:
                created_count += 1
                self.stdout.write(
                    self.style.SUCCESS(f'‚úÖ Fracci√≥n {numero} creada: {nombre[:50]}...')
                )
            else:
                # Actualizar datos existentes
                fraccion.nombre = nombre
                fraccion.descripcion = f"Fracci√≥n {numero} del Art√≠culo 65 - {nombre}"
                fraccion.tipo_usuario_asignado = tipo_usuario
                fraccion.save()
                updated_count += 1
                self.stdout.write(
                    self.style.WARNING(f'üîÑ Fracci√≥n {numero} actualizada: {nombre[:50]}...')
                )

        # Resumen final
        self.stdout.write(
            self.style.SUCCESS(f'\nüéâ FRACCIONES OFICIALES CARGADAS:')
        )
        self.stdout.write(f'‚úÖ Nuevas: {created_count}')
        self.stdout.write(f'üîÑ Actualizadas: {updated_count}')
        self.stdout.write(f'üìã Total: {len(fracciones_oficiales)} fracciones')
        self.stdout.write(f'üîç Transparencia: 31 fracciones')
        self.stdout.write(f'üí∞ Recursos Financieros: 3 fracciones')
        self.stdout.write(f'üìä Otras: 1 fracci√≥n')